{"version":3,"sources":["components/AddCategory.js","components/SugerenciaCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","SugerenciaCategory","auto","Simpsons","Libros","className","id","onClick","GifGridItem","title","url","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFechGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAa5C,OACI,0BAAMC,SATU,SAACC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,OAMd,4BAAKD,GACL,2BACIQ,KAAK,OACLC,YAAY,wBACZC,MAAOV,EACPW,SAlBc,SAACR,GACvBF,EAAcE,EAAES,OAAOF,YCHlBG,EAAqB,SAAC,GAAqB,IAApBf,EAAmB,EAAnBA,cAC1BgB,EAAK,OACLC,EAAW,WACXC,EAAS,SAUf,OACI,oCACA,4CAAqB,6BACjB,yBAAKC,UAAU,SACX,uBAAGC,GAAG,YAAYC,QAbZ,WACdrB,GAAe,SAAAS,GAAI,OAAKO,GAAL,mBAAcP,SAYeO,GACxC,uBAAGI,GAAG,YAAYC,QAXZ,WACdrB,GAAe,SAAAS,GAAI,OAAKQ,GAAL,mBAAiBR,SAUYQ,GACxC,uBAAGG,GAAG,YAAYC,QATZ,WACdrB,GAAe,SAAAS,GAAI,OAAKS,GAAL,mBAAeT,SAQcS,MCnB3CI,EAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAE/B,OACI,yBAAKL,UAAU,4CACX,yBAAKM,IAAKD,EAAKE,IAAKH,IACpB,2BAAIA,K,uBCPHI,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DAEZL,EAFY,iDAEoCM,UAAUF,GAF9C,+DAGAG,MAAMP,GAHN,cAGZQ,EAHY,gBAIIA,EAAKC,OAJT,uBAIVC,EAJU,EAIVA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFjB,GAAIiB,EAAIjB,GACRG,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QATxB,kBAYXW,GAZW,4CAAF,sDCKPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECAZ,SAACA,GAAc,IAAD,EACX3B,mBAAS,CAC/BiC,KAAM,GACNO,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAkBrC,OAbAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAKtB,CAACb,IAGGc,EDduBK,CAAYnB,GAA9BU,EAJuB,EAI5BJ,KAAYO,EAJgB,EAIhBA,QAGnB,OACI,oCACI,wBAAItB,UAAU,yCAAyCS,GACtDa,GAAW,uBAAGtB,UAAU,oCAAb,WACX,yBAAKA,UAAU,aAERmB,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIW,IAAKX,EAAIjB,IACLiB,UEYjBY,EA7BM,WAAK,IAAD,EAGehD,mBAAS,CAAC,YAHzB,mBAGdiD,EAHc,KAGFlD,EAHE,KAKrB,OACI,6BACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,kBAAC,EAAD,CAAoBA,cAAeA,IACnC,6BAGA,4BAEQkD,EAAWd,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CACIoB,IAAKpB,EACLA,SAAUA,UCjBtCuB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.5a213156.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ({setcategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e)=>{\r\n        setinputValue(e.target.value)\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setcategories (cats => [inputValue,...cats  ]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>{inputValue}</h1>\r\n            <input \r\n                type=\"text\"\r\n                placeholder='Agregar una categoria'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n               \r\n\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const SugerenciaCategory = ({setcategories}) => {\r\n    const auto='Auto';\r\n    const Simpsons = 'Simpsons';\r\n    const Libros = 'Libros';\r\n    const handleAddA =()=>{\r\n        setcategories (cats => [auto, ...cats]);\r\n    }\r\n    const handleAddS =()=>{\r\n        setcategories (cats => [Simpsons,...cats ]);\r\n    }\r\n    const handleAddL =()=>{\r\n        setcategories (cats => [Libros,...cats  ]);\r\n    }\r\n    return (\r\n        <>\r\n        <h5>SUGERENCIAS:</h5><br></br>\r\n            <div className=\"suger\">\r\n                <p id=\"sugerency\" onClick={handleAddA}>{auto}</p> \r\n                <p id=\"sugerency\" onClick={handleAddS}>{Simpsons}</p>\r\n                <p id=\"sugerency\" onClick={handleAddL}>{Libros}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SugerenciaCategory\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInUp\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs =async(category)=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=12&api_key=OsyBgIL2G88Wn1K2ZWAXzqbR4hj4ojFo`;\r\n    const resp= await fetch(url);\r\n    const  {data} = await resp.json();\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}\r\n","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFechGifs } from '../hooks/useFechGifs';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    \r\n    \r\n    const {data:images,loading} = useFechGifs(category);\r\n  \r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\" >Loading</p>}\r\n            {<div className=\"card-grid\">\r\n                {\r\n                    images.map( img  =>(\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFechGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [] ,\r\n        loading: true \r\n    });\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                }); \r\n                \r\n                \r\n            })\r\n    }, [category ])\r\n   \r\n\r\n    return state; //{data:[], loanding: true}; \r\n}\r\n// useEffect(()=>{\r\n    //     getGifs(category).then(setImages);\r\n    // },[category])","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport {SugerenciaCategory} from './components/SugerenciaCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nconst GifExpertApp = ()=>{\r\n\r\n    \r\n    const [categories, setcategories] = useState(['Digimon']);\r\n    \r\n    return (\r\n        <div >\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setcategories={setcategories}/>\r\n            <hr />\r\n            <SugerenciaCategory setcategories={setcategories}/> \r\n            <hr />\r\n            \r\n            \r\n            <ol>\r\n                { \r\n                    categories.map(category=> (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n\r\n                }\r\n            </ol>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}