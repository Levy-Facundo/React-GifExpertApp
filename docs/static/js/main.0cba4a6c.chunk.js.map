{"version":3,"sources":["components/AddCategory.js","components/SugerenciaCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","categories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","valor","includes","cats","type","placeholder","value","onChange","target","SugerenciaCategory","auto","Simpsons","Libros","Dragon","Naruto","Cartoon","className","id","onClick","GifGridItem","title","url","src","alt","getGifs","category","limite","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","setlimite","loading","state","setState","useEffect","then","imgs","useFechGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0cba4a6c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ({setcategories, categories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e)=>{\r\n        setinputValue(e.target.value)\r\n    }\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            const valor = categories.includes(inputValue);\r\n            if(!valor === true){\r\n              setcategories (cats => [inputValue,...cats  ]);\r\n                setinputValue('');  \r\n            } \r\n            if(valor === true){\r\n                setinputValue('');\r\n            }\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n           {/*  <h1>{inputValue}</h1> */}\r\n            <input \r\n                type=\"text\"\r\n                placeholder='Agregar una categoria'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n               \r\n\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const SugerenciaCategory = ({setcategories,categories}) => {\r\n    const auto='Auto';\r\n    const Simpsons = 'Simpsons';\r\n    const Libros = 'Libros';\r\n    const Dragon = 'Dragon Ball';\r\n    const Naruto = 'Naruto';\r\n    const Cartoon = 'Cartoon';\r\n    const handleAddA =()=>{\r\n        const valor = categories.includes(auto);\r\n            if(!valor === true){\r\n              setcategories (cats => [auto,...cats  ]); \r\n            } \r\n    }\r\n    const handleAddS =()=>{\r\n        const valor = categories.includes(Simpsons);\r\n            if(!valor === true){\r\n              setcategories (cats => [Simpsons,...cats  ]); \r\n            } \r\n    }\r\n    const handleAddD =()=>{\r\n        const valor = categories.includes(Dragon);\r\n            if(!valor === true){\r\n              setcategories (cats => [Dragon,...cats  ]); \r\n            } \r\n    }\r\n    const handleAddN=()=>{\r\n        const valor = categories.includes(Naruto);\r\n            if(!valor === true){\r\n              setcategories (cats => [Naruto,...cats  ]); \r\n            } \r\n    }\r\n    const handleAddC =()=>{\r\n        const valor = categories.includes(Cartoon);\r\n            if(!valor === true){\r\n              setcategories (cats => [Cartoon,...cats  ]); \r\n            } \r\n    }\r\n    const handleAddL =()=>{\r\n        const valor = categories.includes(Libros);\r\n            if(!valor === true){\r\n              setcategories (cats => [Libros,...cats  ]); \r\n            } \r\n    }\r\n\r\n    return (\r\n        <>\r\n        <h5>SUGERENCIAS:</h5><br></br>\r\n            <div className=\"suger\">\r\n                <p id=\"sugerency\" onClick={handleAddA}>{auto}</p> \r\n                <p id=\"sugerency\" onClick={handleAddS}>{Simpsons}</p>\r\n                <p id=\"sugerency\" onClick={handleAddL}>{Libros}</p>\r\n                <p id=\"sugerency\" onClick={handleAddD}>{Dragon}</p> \r\n                <p id=\"sugerency\" onClick={handleAddN}>{Naruto}</p>\r\n                <p id=\"sugerency\" onClick={handleAddC}>{Cartoon}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SugerenciaCategory\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs =async(category, limite)=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limite}&api_key=OsyBgIL2G88Wn1K2ZWAXzqbR4hj4ojFo`;\r\n    const resp= await fetch(url);\r\n    const  {data} = await resp.json();\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFechGifs } from '../hooks/useFechGifs';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    const [limite, setlimite] = useState(12)\r\n    const moreGif = ()=>{\r\n        setlimite(20);\r\n        \r\n    }\r\n    const {data:images,loading} = useFechGifs(category,limite);\r\n  \r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__rubberBand\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\" >Loading</p>}\r\n            {<div className=\"card-grid\">\r\n                {\r\n                    images.map( img  =>(\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img} \r\n                        />\r\n                    ))\r\n                }\r\n            </div>}\r\n            <button onClick={ moreGif }>More..</button>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n \r\nexport const useFechGifs = (category,limite) => {\r\n    const [state, setState] = useState({\r\n        data: [] ,\r\n        loading: true \r\n    });\r\n    useEffect(() => {\r\n        getGifs(category, limite)\r\n            .then(imgs=>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                }); \r\n                \r\n                \r\n            })\r\n    }, [category,limite ])\r\n   \r\n\r\n    return state; //{data:[], loanding: true}; \r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport {SugerenciaCategory} from './components/SugerenciaCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nconst GifExpertApp = ()=>{\r\n\r\n    \r\n    const [categories, setcategories] = useState(['Marvel']);\r\n    \r\n    return (\r\n        <div >\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setcategories={setcategories} categories={categories}/>\r\n            <hr />\r\n            <SugerenciaCategory  setcategories={setcategories} categories={categories}/> \r\n            <hr />\r\n            \r\n            \r\n            <ol>\r\n                { \r\n                    categories.map(category=> (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    ))\r\n\r\n                }\r\n            </ol>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}